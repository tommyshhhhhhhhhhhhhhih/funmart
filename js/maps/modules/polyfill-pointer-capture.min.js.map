{"version":3,"sources":["src/js/modules/polyfill-pointer-capture.mjs"],"names":["undefined","Element","prototype","setPointerCapture","hasPointerCapture","releasePointerCapture","console","log","_Element$prototype","set","release","targets","captures","pointerId","document","contains","this","call","TypeError","redirectPointer","event","target","preventDefault","stopPropagation","dispatchEvent","PointerEvent","type","redirectAndUnregisterPointer","addEventListener","pointerType","capture","passive"],"mappings":"yBAEA,QACyCA,IAAxCC,QAAQC,UAAUC,wBACsBH,IAAxCC,QAAQC,UAAUE,wBAC0BJ,IAA5CC,QAAQC,UAAUG,sBACjB,CACDC,QAAQC,IAAI,4BAEZ,IAAAC,EAIIP,QAAQC,UAHQO,EADpBD,EACCL,kBADDK,EAECJ,kBAFD,IAGwBM,EAHxBF,EAGCH,sBAGGM,EAAU,GACVC,EAAW,GAEfN,QAAQC,IAAI,yBAA6DP,IAAxCC,QAAQC,UAAUC,wBACPH,IAAxCC,QAAQC,UAAUC,oBACrBF,QAAQC,UAAUC,kBAAoB,SAA2BU,GAChE,GAAIA,KAAaD,EAAU,CAC1B,GAAIE,SAASC,SAASC,MAErB,OADAJ,EAASC,GAAaG,KACfP,EAAIQ,KAAKN,EAAQE,GAAYA,GAEpC,MAAM,IAAIK,UAAU,iCAGrB,OAAOT,EAAIQ,KAAKD,KAAMH,KAKzBP,QAAQC,IAAI,yBAA6DP,IAAxCC,QAAQC,UAAUE,wBACPJ,IAAxCC,QAAQC,UAAUE,oBACrBH,QAAQC,UAAUE,kBAAoB,SAA2BS,GAChE,OAAIA,KAAaD,GACTA,EAASC,IAAcG,OAQjCV,QAAQC,IAAI,6BAAqEP,IAA5CC,QAAQC,UAAUG,uBACnDJ,QAAQC,UAAUG,wBACrBJ,QAAQC,UAAUG,sBAAwB,SAA+BQ,GACxE,OAAIA,KAAaD,EACZI,KAAKZ,kBAAkBS,IAC1BD,EAASC,GAAa,KACfH,EAAQO,KAAKN,EAAQE,GAAYA,SAFzC,EAKOH,EAAQO,KAAKD,KAAMH,KAK7B,IAOMM,EAAkB,SAAyBC,GACf,MAA7BR,EAASQ,EAAMP,YAAsBD,EAASQ,EAAMP,YAAcO,EAAMC,SAE3ED,EAAME,iBACNF,EAAMG,kBAGNX,EAASQ,EAAMP,WAAWW,cAAc,IAAIC,aAAaL,EAAMM,KAAMN,MAIjEO,EAA+B,SAAsCP,GAC1ED,EAAgBC,UACTT,EAAQS,EAAMP,kBACdD,EAASQ,EAAMP,YAGvBe,iBAAiB,cAxBO,SAAyBR,GACvB,SAArBA,EAAMS,aAA+C,OAArBT,EAAMS,cACzClB,EAAQS,EAAMP,WAAaO,EAAMC,OACjCT,EAASQ,EAAMP,WAAa,OAqBmB,CAACiB,SAAS,EAAMC,SAAS,IAC1EH,iBAAiB,cAAeT,EAAiB,CAACW,SAAS,EAAMC,SAAS,IAC1EH,iBAAiB,YAAaD,EAA8B,CAACG,SAAS,EAAMC,SAAS,IACrFH,iBAAiB,gBAAiBD,EAA8B,CAACG,SAAS,EAAMC,SAAS","file":"../../modules/polyfill-pointer-capture.min.js","sourcesContent":["// Need to figure out some way to test if this is needed.\r\n// https://stackoverflow.com/q/64017560/11240898\r\nif (\r\n\tElement.prototype.setPointerCapture === undefined ||\r\n\tElement.prototype.hasPointerCapture === undefined ||\r\n\tElement.prototype.releasePointerCapture === undefined\r\n) {\r\n\tconsole.log('polyfill-pointer-capture')\r\n\r\n\tconst {\r\n\t\tsetPointerCapture: set,\r\n\t\thasPointerCapture: has,\r\n\t\treleasePointerCapture: release\r\n\t} = Element.prototype\r\n\r\n\tlet targets = {};\r\n\tlet captures = {}\r\n\r\n\tconsole.log('setPointerCapture', Element.prototype.setPointerCapture === undefined);\r\n\tif (Element.prototype.setPointerCapture === undefined) {\r\n\t\tElement.prototype.setPointerCapture = function setPointerCapture(pointerId) {\r\n\t\t\tif (pointerId in captures) {\r\n\t\t\t\tif (document.contains(this)) {\r\n\t\t\t\t\tcaptures[pointerId] = this\r\n\t\t\t\t\treturn set.call(targets[pointerId], pointerId)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new TypeError(\"Element not in valid location\")\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn set.call(this, pointerId)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconsole.log('hasPointerCapture', Element.prototype.hasPointerCapture === undefined);\r\n\tif (Element.prototype.hasPointerCapture === undefined) {\r\n\t\tElement.prototype.hasPointerCapture = function hasPointerCapture(pointerId) {\r\n\t\t\tif (pointerId in captures) {\r\n\t\t\t\treturn captures[pointerId] == this\r\n\t\t\t} else {\r\n\t\t\t\t// return has.call(this, pointerId)\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconsole.log('releasePointerCapture', Element.prototype.releasePointerCapture === undefined);\r\n\tif (Element.prototype.releasePointerCapture) {\r\n\t\tElement.prototype.releasePointerCapture = function releasePointerCapture(pointerId) {\r\n\t\t\tif (pointerId in captures) {\r\n\t\t\t\tif (this.hasPointerCapture(pointerId)) {\r\n\t\t\t\t\tcaptures[pointerId] = null\r\n\t\t\t\t\treturn release.call(targets[pointerId], pointerId)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn release.call(this, pointerId)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst registerPointer = function registerPointer(event) {\r\n\t\tif (event.pointerType == \"touch\" || event.pointerType == \"pen\") {\r\n\t\t\ttargets[event.pointerId] = event.target\r\n\t\t\tcaptures[event.pointerId] = null\r\n\t\t}\r\n\t};\r\n\r\n\tconst redirectPointer = function redirectPointer(event) {\r\n\t\tif (captures[event.pointerId] != null && captures[event.pointerId] != event.target) {\r\n\t\t\t// Stop the original event\r\n\t\t\tevent.preventDefault()\r\n\t\t\tevent.stopPropagation()\r\n\r\n\t\t\t// Redispatch a new, cloned event\r\n\t\t\tcaptures[event.pointerId].dispatchEvent(new PointerEvent(event.type, event))\r\n\t\t}\r\n\t};\r\n\r\n\tconst redirectAndUnregisterPointer = function redirectAndUnregisterPointer(event) {\r\n\t\tredirectPointer(event)\r\n\t\tdelete targets[event.pointerId]\r\n\t\tdelete captures[event.pointerId]\r\n\t};\r\n\r\n\taddEventListener(\"pointerdown\", registerPointer, {capture: true, passive: true})\r\n\taddEventListener(\"pointermove\", redirectPointer, {capture: true, passive: false})\r\n\taddEventListener(\"pointerup\", redirectAndUnregisterPointer, {capture: true, passive: false})\r\n\taddEventListener(\"pointercancel\", redirectAndUnregisterPointer, {capture: true, passive: false})\r\n}\r\n"],"sourceRoot":"../../../src/"}